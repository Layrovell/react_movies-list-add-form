{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","buttonDisabled","checkImgUrl","checkImdbUrl","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","validUrl","test","props","addMovie","this","check","checkImg","checkImdb","onSubmit","onChange","type","placeholder","length","disabled","Component","App","moviesFromServer","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75e08741.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    buttonDisabled: true,\n    checkImgUrl: false,\n    checkImdbUrl: false,\n  };\n\n  componentDidUpdate() {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    // eslint-disable-next-line\n    const validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const check = validUrl.test(imgUrl) && validUrl.test(imdbUrl);\n\n    if (title && description && imgUrl && imdbUrl && imdbId) {\n      if (check && this.state.buttonDisabled) {\n        // eslint-disable-next-line\n        this.setState({\n          buttonDisabled: false,\n          checkImgUrl: true,\n          checkImdbUrl: true,\n        });\n      }\n    } else if (!this.state.buttonDisabled) {\n      // eslint-disable-next-line\n      this.setState({ buttonDisabled: true });\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      this.setState({\n        buttonDisabled: true,\n      });\n\n      return;\n    }\n\n    // eslint-disable-next-line\n    const validUrl = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n    const check = validUrl.test(imgUrl) && validUrl.test(imdbUrl);\n\n    if (check) {\n      this.props.addMovie(title, description, imgUrl, imdbUrl, imdbId);\n      this.setState({\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n        buttonDisabled: false,\n      });\n    } else {\n      this.setState({\n        buttonDisabled: true,\n      });\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      checkImgUrl: checkImg,\n      checkImdbUrl: checkImdb,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <p className=\"is-size-4\">Add a new film</p>\n\n        <div>\n          <input\n            value={title}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"title\"\n          />\n\n          {title.length > 0 && <span className=\"green-text\">✓</span>}\n        </div>\n\n        <div>\n          <input\n            value={description}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"description\"\n          />\n\n          {description.length > 0 && <span className=\"green-text\">✓</span>}\n        </div>\n\n        <div>\n          <input\n            value={imgUrl}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"imgUrl\"\n            placeholder=\"imgUrl\"\n          />\n\n          {checkImg && imgUrl.length > 0\n            ? <span className=\"green-text\">✓</span>\n            : ''}\n        </div>\n\n        <div>\n          <input\n            value={imdbUrl}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"imdbUrl\"\n            placeholder=\"imdbUrl\"\n          />\n\n          {checkImdb && imdbUrl.length > 0\n            ? <span className=\"green-text\">✓</span>\n            : ''}\n        </div>\n\n        <div>\n          <input\n            value={imdbId}\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"imdbId\"\n            placeholder=\"imdbId\"\n          />\n\n          {imdbId.length > 0 && <span className=\"green-text\">✓</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={this.state.buttonDisabled}\n        >\n          add\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (title, description, imgUrl, imdbUrl, imdbId) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        {\n          title,\n          description,\n          imgUrl,\n          imdbUrl,\n          imdbId: prevState.movies.length + 1,\n        },\n      ],\n    }));\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}